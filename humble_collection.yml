name: Humble Games Collection
game_slug: humble-games-collection
version: Installer
slug: humble-games-collection-windows
runner: wine

script:
  files:
  - ags: https://www.humblebundle.com/app/download
  game:
    arch: win64
    exe: start-humble.cmd
    args: --in-process-gpu
    prefix: $GAMEDIR
  installer:
  - task:
      arch: win64
      name: create_prefix
      prefix: $GAMEDIR
  - task:
      arch: win64
      exclude_processes: Humble App.exe explorer.exe
      executable: ags
      name: wineexec
      prefix: $GAMEDIR
  - input_menu:
      description: |
        How did you install Lutris?

        If you're using a Steam Deck, you've most likely installed with Flatpak.
      id: LPATHS
      options:
        - "lutris,$HOME/.config/lutris/games/,$HOME/.local/share/lutris/pga.db": Native
        - "flatpak run net.lutris.Lutris,$HOME/.var/app/net.lutris.Lutris/config/lutris/games/,$HOME/.var/app/net.lutris.Lutris/data/lutris/pga.db": Flatpak (Steam Deck)
  # Script to handle humble:// scheme deep links
  #
  # The Humble App opens your web browser so you can login
  # and allow the app access to your account.
  - write_file:
      file: $GAMEDIR/handle-humble-scheme
      content: |
        #!/usr/bin/env sh
        set -e
 
        function cleanup() {
                # Restore original config
                echo "Restoring original config"
                mv "${BACKUP_FILE_PATH}" "${CONFIG_FULL_PATH}"
        }
        IFS=,
        read START_COMMAND LUTRIS_CONFIGS LUTRIS_DB_PATH <<< "$INPUT_LPATHS"

        # Find config file
        CONFIGPATH=$(sqlite3 "$LUTRIS_DB_PATH" 'select configpath from games where installer_slug = "humble-games-collection-windows" order by id asc limit 1;')
        CONFIG_FULL_PATH="${LUTRIS_CONFIGS}${CONFIGPATH}.yml"
        if [ ! -f "$CONFIG_FULL_PATH" ]; then
                echo "$CONFIG_FULL_PATH does not exist. Exiting."
                exit 1
        fi
        # Backup original config
        BACKUP_FILE_PATH="${CONFIG_FULL_PATH}.bak"
        cp "${CONFIG_FULL_PATH}" "${BACKUP_FILE_PATH}"
        echo "Backed up ${CONFIG_FULL_PATH} to ${BACKUP_FILE_PATH}"
        trap cleanup EXIT
        # Replace args with just url
        echo "$1" > ~/login.log
        FIXED_SCHEME="$(echo "$1" | sed 's/?/\//')"
        echo "$FIXED_SCHEME" >> ~/login.log
        ESCAPED_SCHEME="$(echo "${FIXED_SCHEME}" | \
                sed 's/\//\\\//g' | \
                sed 's/\&/\\\^\\\&/g')"
        echo "$ESCAPED_SCHEME" >> ~/login.log
        echo ${ESCAPED_SCHEME}
        sed -i "s/^  args:.*$/  args: $(echo ${ESCAPED_SCHEME})/" ${CONFIG_FULL_PATH}
        cat ${CONFIG_FULL_PATH}
        # Launch through Lutris CLI
        GAME_ID=$(sqlite3 "$LUTRIS_DB_PATH" 'select id from games where installer_slug = "humble-games-collection-windows" order by id asc limit 1;')
        export LUTRIS_SKIP_INIT=1
        bash -c "$START_COMMAND lutris:rungameid/${GAME_ID}"
  - chmodx: $GAMEDIR/handle-humble-scheme
  # Create a batch file to start the app with wineconsole, to avoid a JS crash
  - write_file:
      file: $GAMEDIR/start-humble.cmd
      content: |
        cd /d "%USERPROFILE%\AppData\Local\Programs\Humble App\"
        start "" "Humble App.exe" "%*"
  # Create a .desktop file to handle humble:// url schemes
  - write_file:
      file: $HOME/.local/share/applications/Humble-scheme-handler.desktop
      content: |
        [Desktop Entry]
        Name=Humble-scheme-handler
        Exec=$GAMEDIR/handle-humble-scheme %u
        Type=Application
        NoDisplay=true
        MimeType=x-scheme-handler/humble;
  # Make the previous .desktop the default handler for humble:// url schemes
  - execute:
      args: '-c "if command -v xdg-settings 1&>/dev/null; then xdg-settings set default-url-scheme-handler humble Humble-scheme-handler.desktop; else echo \"No xdg-settings. You are probably running in Flatpak. Run `xdg-settings set default-url-scheme-handler humble Humble-scheme-handler.desktop` manually in another terminal.\"; fi"'
      file: /bin/sh

